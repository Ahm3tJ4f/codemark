{"version":3,"sources":["bundler/index.ts","components/code-editor/code-editor.tsx","components/preview/preview.tsx","bundler/plugins/fetch-plugin.ts","bundler/plugins/unpkg-path-plugin.ts","components/resizable/resizable.tsx","components/code-cell/code-cell.tsx","index.tsx"],"names":["service","CodeEditor","initialValue","onChange","editorRef","useRef","className","onClick","unformattedCode","current","getModel","getValue","formattedCode","prettier","format","parser","plugins","semi","singleQuote","setValue","editorDidMount","monacoEditor","onDidChangeModelContent","value","theme","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","language","height","html","Preview","code","err","iframe","useEffect","srcdoc","setTimeout","contentWindow","postMessage","title","srcDoc","ref","sandbox","fileCache","localForage","createInstance","name","fetchPlugin","input","setup","build","onLoad","filter","loader","contents","args","getItem","path","cachedResult","axios","get","data","request","setItem","escapedData","replace","result","resolveDir","URL","responseURL","pathname","bundle","inputCode","esbuild","worker","wasmURL","entryPoints","write","onResolve","namespace","href","define","global","outputFiles","text","Error","message","Resizable","resizableProps","direction","children","useState","window","innerHeight","setInnerHeight","innerWidth","setInnerWidth","width","setWidth","timer","listener","clearTimeout","addEventListener","removeEventListener","minConstraints","Infinity","maxConstraints","resizeHandles","onResizeStop","event","size","CodeCell","setInput","setCode","setErr","executionTimer","bundleOutput","style","display","flexDirection","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8a283119.chunk.js","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\r\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\r\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\r\n\r\nlet service: esbuild.Service;\r\n\r\nconst bundle = async (inputCode: string) => {\r\n  if (!service) {\r\n    service = await esbuild.startService({\r\n      worker: true,\r\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm\",\r\n    });\r\n  }\r\n\r\n  try {\r\n    const result = await service.build({\r\n      entryPoints: [\"index.js\"],\r\n      bundle: true,\r\n      write: false,\r\n      plugins: [fetchPlugin(inputCode), unpkgPathPlugin()],\r\n      define: {\r\n        \"process.env.NODE_ENV\": '\"production\"',\r\n        global: \"window\",\r\n      },\r\n    });\r\n    return {\r\n      code: result.outputFiles[0].text,\r\n      err: \"\",\r\n    };\r\n  } catch (err) {\r\n    if (err instanceof Error) {\r\n      return {\r\n        code: \"\",\r\n        err: err.message,\r\n      };\r\n    } else {\r\n      throw err;\r\n    }\r\n  }\r\n};\r\n\r\nexport default bundle;\r\n","import \"./code-editor.css\";\r\nimport MonacoEditor, { EditorDidMount } from \"@monaco-editor/react\";\r\nimport prettier from \"prettier\";\r\nimport parser from \"prettier/parser-babel\";\r\nimport { useRef } from \"react\";\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChange(value: string): void;\r\n}\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({ initialValue, onChange }) => {\r\n  const editorRef = useRef<any>();\r\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\r\n    editorRef.current = monacoEditor;\r\n    monacoEditor.onDidChangeModelContent(() => {\r\n      onChange(getValue());\r\n    });\r\n  };\r\n  const onFormatClick = () => {\r\n    const unformattedCode = editorRef.current.getModel().getValue();\r\n    const formattedCode = prettier.format(unformattedCode, {\r\n      parser: \"babel\",\r\n      plugins: [parser],\r\n      semi: true,\r\n      singleQuote: false,\r\n    });\r\n    editorRef.current.setValue(formattedCode);\r\n  };\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <button\r\n        className=\"button button-format is-primary\"\r\n        onClick={onFormatClick}\r\n      >\r\n        Format\r\n      </button>\r\n      <MonacoEditor\r\n        editorDidMount={onEditorDidMount}\r\n        value={initialValue}\r\n        theme=\"dark\"\r\n        options={{\r\n          wordWrap: \"on\",\r\n          minimap: { enabled: false },\r\n          showUnused: false,\r\n          folding: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 16,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true,\r\n        }}\r\n        language=\"javascript\"\r\n        height=\"100%\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","import { useEffect, useRef } from \"react\";\r\nimport \"./preview.css\";\r\ninterface PreviewProps {\r\n  code: string;\r\n  err: string;\r\n}\r\n\r\nconst html = `\r\n<html>\r\n   <head>\r\n   </head>\r\n   <body>\r\n      <div id=\"root\"></div>\r\n      <script>\r\n         function showError(err) {\r\n         console.error(err);\r\n         const root = document.querySelector(\"#root\");\r\n         root.innerHTML =\r\n         '<div style=\"color: #b80000;\"><h4>Runtime Error</h4>' + err + \"</div>\";\r\n         }\r\n         \r\n         window.addEventListener(\"error\", (event) => {\r\n         event.preventDefault();\r\n         showError(event.error);\r\n         });\r\n         \r\n         window.addEventListener(\"message\", (event) => {\r\n         try {\r\n         eval(event.data);\r\n         } catch (err) {\r\n         showError(event.error);\r\n         }\r\n         });\r\n      </script>\r\n   </body>\r\n</html>\r\n    `;\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\r\n  const iframe = useRef<any>();\r\n\r\n  useEffect(() => {\r\n    iframe.current.srcdoc = html;\r\n    setTimeout(() => {\r\n      iframe.current.contentWindow.postMessage(code, \"*\");\r\n    }, 10);\r\n  }, [code]);\r\n\r\n  return (\r\n    <div className=\"preview-wrapper\">\r\n      <iframe\r\n        title=\"codePreview\"\r\n        srcDoc={html}\r\n        ref={iframe}\r\n        sandbox=\"allow-scripts\"\r\n      />\r\n      {err && <span className=\"preview-error\">{err}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import * as esbuild from \"esbuild-wasm\";\r\nimport localForage from \"localforage\";\r\nimport axios from \"axios\";\r\n\r\nconst fileCache = localForage.createInstance({\r\n  name: \"filecache\",\r\n});\r\n\r\nexport const fetchPlugin = (input: string) => {\r\n  return {\r\n    name: \"fetch-plugin\",\r\n    setup(build: esbuild.PluginBuild) {\r\n      //handle root entry file of 'index.js'\r\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          loader: \"jsx\",\r\n          contents: input,\r\n        };\r\n      });\r\n\r\n      //load cached file\r\n      build.onLoad({ filter: /.*/ }, async (args) => {\r\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\r\n          args.path\r\n        );\r\n        if (cachedResult) {\r\n          return cachedResult;\r\n        }\r\n      });\r\n\r\n      //handle CSS file\r\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        fileCache.setItem(args.path, data);\r\n        const escapedData = data\r\n          .replace(/\\n/g, \"\")\r\n          .replace(/\"/g, '\\\\\"')\r\n          .replace(/'/g, \"\\\\'\");\r\n\r\n        const contents = `\r\n          const style = document.createElement('style');\r\n          style.innerText = '${escapedData}';\r\n          document.head.appendChild(style);\r\n          `;\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: \"jsx\",\r\n          contents,\r\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\r\n        };\r\n        fileCache.setItem(args.path, result);\r\n        return result;\r\n      });\r\n\r\n      //handle JS file\r\n      build.onLoad({ filter: /.*/ }, async (args) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        fileCache.setItem(args.path, data);\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: \"jsx\",\r\n          contents: data,\r\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\r\n        };\r\n        fileCache.setItem(args.path, result);\r\n        return result;\r\n      });\r\n    },\r\n  };\r\n};\r\n","import * as esbuild from \"esbuild-wasm\";\r\n\r\nexport const unpkgPathPlugin = () => {\r\n  return {\r\n    name: \"unpkg-path-plugin\",\r\n    setup(build: esbuild.PluginBuild) {\r\n      //handle root entry file of 'index.js'\r\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          path: \"index.js\",\r\n          namespace: \"a\",\r\n        };\r\n      });\r\n      // handle relative paths in modules\r\n      build.onResolve({ filter: /^\\.+\\// }, (args) => {\r\n        const newURL = new URL(\r\n          args.path,\r\n          \"https://unpkg.com\" + args.resolveDir + \"/\"\r\n        );\r\n        return {\r\n          namespace: \"a\",\r\n          path: newURL.href,\r\n        };\r\n      });\r\n      // handle requested file in module\r\n      build.onResolve({ filter: /.*/ }, async (args) => {\r\n        return {\r\n          namespace: \"a\",\r\n          path: `https://unpkg.com/${args.path}`,\r\n        };\r\n      });\r\n    },\r\n  };\r\n};\r\n","/* eslint-disable react/prop-types */\r\nimport \"./resizable.css\";\r\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\r\nimport { useEffect, useState } from \"react\";\r\ninterface ResizableProps {\r\n  direction: \"horizontal\" | \"vertical\";\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\r\n  let resizableProps: ResizableBoxProps;\r\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\r\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\r\n  const [width, setWidth] = useState(window.innerWidth * 0.75);\r\n  useEffect(() => {\r\n    let timer: any;\r\n\r\n    const listener = () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n      timer = setTimeout(() => {\r\n        setInnerHeight(window.innerHeight);\r\n        setInnerWidth(window.innerWidth);\r\n        if (window.innerWidth * 0.75 < width) {\r\n          setWidth(window.innerWidth * 0.75);\r\n        }\r\n      }, 100);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", listener);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", listener);\r\n    };\r\n  }, [width]);\r\n\r\n  if (direction === \"horizontal\") {\r\n    resizableProps = {\r\n      className: \"resize-horizontal\",\r\n      minConstraints: [innerWidth * 0.2, Infinity],\r\n      maxConstraints: [innerWidth * 0.8, Infinity],\r\n      height: Infinity,\r\n      width,\r\n      resizeHandles: [\"e\"],\r\n      onResizeStop: (event, data) => {\r\n        setWidth(data.size.width);\r\n      },\r\n    };\r\n  } else {\r\n    resizableProps = {\r\n      minConstraints: [Infinity, 24],\r\n      maxConstraints: [Infinity, innerHeight * 0.9],\r\n      height: 300,\r\n      width: Infinity,\r\n      resizeHandles: [\"s\"],\r\n    };\r\n  }\r\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\r\n};\r\n\r\nexport default Resizable;\r\n","import { useEffect, useState } from \"react\";\r\nimport CodeEditor from \"components/code-editor/code-editor\";\r\nimport Preview from \"components/preview/preview\";\r\nimport bundle from \"../../bundler\";\r\nimport Resizable from \"components/resizable/resizable\";\r\nconst CodeCell: React.FC = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const executionTimer = setTimeout(async () => {\r\n      const bundleOutput = await bundle(input);\r\n      setCode(bundleOutput.code);\r\n      setErr(bundleOutput.err);\r\n    }, 1500);\r\n\r\n    return () => {\r\n      clearTimeout(executionTimer);\r\n    };\r\n  }, [input]);\r\n\r\n  const handleEditorChange = (value: string) => {\r\n    setInput(value);\r\n  };\r\n\r\n  return (\r\n    <Resizable direction=\"vertical\">\r\n      <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\r\n        <Resizable direction=\"horizontal\">\r\n          <CodeEditor\r\n            onChange={handleEditorChange}\r\n            initialValue=\"//start writing your code!\"\r\n          />\r\n        </Resizable>\r\n        <Preview code={code} err={err} />\r\n      </div>\r\n    </Resizable>\r\n  );\r\n};\r\n\r\nexport default CodeCell;\r\n","import \"bulmaswatch/superhero/bulmaswatch.min.css\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport CodeCell from \"components/code-cell/code-cell\";\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <CodeCell />\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\r\n"],"sourceRoot":""}