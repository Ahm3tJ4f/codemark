[{"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\index.tsx":"1","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\code-editor\\code-editor.tsx":"2","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\preview\\preview.tsx":"3","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"4","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\plugins\\fetch-plugin.ts":"5","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\index.ts":"6","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\code-cell\\code-cell.tsx":"7"},{"size":342,"mtime":1675600444902,"results":"8","hashOfConfig":"9"},{"size":1714,"mtime":1675599514636,"results":"10","hashOfConfig":"9"},{"size":1025,"mtime":1675595972578,"results":"11","hashOfConfig":"9"},{"size":930,"mtime":1668362290819,"results":"12","hashOfConfig":"9"},{"size":2048,"mtime":1675247496982,"results":"13","hashOfConfig":"9"},{"size":754,"mtime":1675596594281,"results":"14","hashOfConfig":"9"},{"size":831,"mtime":1675601403697,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"za49jg",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\index.tsx",[],"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\code-editor\\code-editor.tsx",["36"],"import \"./code-editor.css\";\r\nimport MonacoEditor, { EditorDidMount } from \"@monaco-editor/react\";\r\nimport prettier from \"prettier\";\r\nimport parser from \"prettier/parser-babel\";\r\nimport { useRef } from \"react\";\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChange(value: string): void;\r\n}\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({ initialValue, onChange }) => {\r\n  const editorRef = useRef<any>();\r\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\r\n    editorRef.current = monacoEditor;\r\n    monacoEditor.onDidChangeModelContent(() => {\r\n      onChange(getValue());\r\n    });\r\n  };\r\n  const onFormatClick = () => {\r\n    const unformattedCode = editorRef.current.getModel().getValue();\r\n    const formattedCode = prettier.format(unformattedCode, {\r\n      parser: \"babel\",\r\n      plugins: [parser],\r\n      semi: true,\r\n      singleQuote: false,\r\n    });\r\n    editorRef.current.setValue(formattedCode);\r\n  };\r\n  return (\r\n    <div className=\"editor-wrapper\">\r\n      <button\r\n        className=\"button button-format is-primary\"\r\n        onClick={onFormatClick}\r\n      >\r\n        Format\r\n      </button>\r\n      <MonacoEditor\r\n        editorDidMount={onEditorDidMount}\r\n        value={initialValue}\r\n        theme=\"dark\"\r\n        options={{\r\n          wordWrap: \"on\",\r\n          minimap: { enabled: false },\r\n          showUnused: false,\r\n          folding: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 16,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true,\r\n        }}\r\n        language=\"javascript\"\r\n        height=\"300px\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n",[],"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\preview\\preview.tsx",["37"],"import { useEffect, useRef } from \"react\";\r\n\r\ninterface PreviewProps {\r\n  code: string;\r\n}\r\n\r\nconst html = `\r\n  <html>\r\n    <head>\r\n    </head>\r\n    <body>\r\n      <div id=\"root\"></div>\r\n      <script>\r\n        window.addEventListener(\"message\", (event)=> {\r\n         try{\r\n          eval(event.data)\r\n         } catch (err) {\r\n          console.log(err)\r\n          const root = document.querySelector(\"#root\");\r\n          root.innerHTML = '<div style=\"color: #b80000;\"><h4>Runtime Error</h4>' + err + '</div>';\r\n         }\r\n        })\r\n      </script>\r\n    </body>\r\n  </html>\r\n    `;\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Preview: React.FC<PreviewProps> = ({ code }) => {\r\n  const iframe = useRef<any>();\r\n\r\n  useEffect(() => {\r\n    iframe.current.srcdoc = html;\r\n    iframe.current.contentWindow.postMessage(code, \"*\");\r\n  }, [code]);\r\n\r\n  return (\r\n    <iframe\r\n      title=\"codePreview\"\r\n      srcDoc={html}\r\n      ref={iframe}\r\n      sandbox=\"allow-scripts\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\plugins\\unpkg-path-plugin.ts",["38"],"import * as esbuild from \"esbuild-wasm\";\r\n\r\nexport const unpkgPathPlugin = () => {\r\n  return {\r\n    name: \"unpkg-path-plugin\",\r\n    setup(build: esbuild.PluginBuild) {\r\n      //handle root entry file of 'index.js'\r\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          path: \"index.js\",\r\n          namespace: \"a\",\r\n        };\r\n      });\r\n      // handle relative paths in modules\r\n      build.onResolve({ filter: /^\\.+\\// }, (args) => {\r\n        const newURL = new URL(\r\n          args.path,\r\n          \"https://unpkg.com\" + args.resolveDir + \"/\"\r\n        );\r\n        return {\r\n          namespace: \"a\",\r\n          path: newURL.href,\r\n        };\r\n      });\r\n      // handle requested file in module\r\n      build.onResolve({ filter: /.*/ }, async (args) => {\r\n        return {\r\n          namespace: \"a\",\r\n          path: `https://unpkg.com/${args.path}`,\r\n        };\r\n      });\r\n    },\r\n  };\r\n};\r\n","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\plugins\\fetch-plugin.ts",["39","40"],"import * as esbuild from \"esbuild-wasm\";\r\nimport localForage from \"localforage\";\r\nimport axios from \"axios\";\r\n\r\nconst fileCache = localForage.createInstance({\r\n  name: \"filecache\",\r\n});\r\n\r\nexport const fetchPlugin = (input: string) => {\r\n  return {\r\n    name: \"fetch-plugin\",\r\n    setup(build: esbuild.PluginBuild) {\r\n      //handle root entry file of 'index.js'\r\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          loader: \"jsx\",\r\n          contents: input,\r\n        };\r\n      });\r\n\r\n      //load cached file\r\n      build.onLoad({ filter: /.*/ }, async (args) => {\r\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\r\n          args.path\r\n        );\r\n        if (cachedResult) {\r\n          return cachedResult;\r\n        }\r\n      });\r\n\r\n      //handle CSS file\r\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        fileCache.setItem(args.path, data);\r\n        const escapedData = data\r\n          .replace(/\\n/g, \"\")\r\n          .replace(/\"/g, '\\\\\"')\r\n          .replace(/'/g, \"\\\\'\");\r\n\r\n        const contents = `\r\n          const style = document.createElement('style');\r\n          style.innerText = '${escapedData}';\r\n          document.head.appendChild(style);\r\n          `;\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: \"jsx\",\r\n          contents,\r\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\r\n        };\r\n        fileCache.setItem(args.path, result);\r\n        return result;\r\n      });\r\n\r\n      //handle JS file\r\n      build.onLoad({ filter: /.*/ }, async (args) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        fileCache.setItem(args.path, data);\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: \"jsx\",\r\n          contents: data,\r\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\r\n        };\r\n        fileCache.setItem(args.path, result);\r\n        return result;\r\n      });\r\n    },\r\n  };\r\n};\r\n","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\index.ts",["41"],"import * as esbuild from \"esbuild-wasm\";\r\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\r\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\r\n\r\nlet service: esbuild.Service;\r\n\r\nconst bundle = async (inputCode: string) => {\r\n  if (!service) {\r\n    service = await esbuild.startService({\r\n      worker: true,\r\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm\",\r\n    });\r\n  }\r\n\r\n  const result = await service.build({\r\n    entryPoints: [\"index.js\"],\r\n    bundle: true,\r\n    write: false,\r\n    plugins: [fetchPlugin(inputCode), unpkgPathPlugin()],\r\n    define: {\r\n      \"process.env.NODE_ENV\": '\"production\"',\r\n      global: \"window\",\r\n    },\r\n  });\r\n\r\n  return result.outputFiles[0].text;\r\n};\r\n\r\nexport default bundle;\r\n","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\code-cell\\code-cell.tsx",[],{"ruleId":"42","severity":1,"message":"43","line":13,"column":28,"nodeType":"44","messageId":"45","endLine":13,"endColumn":31,"suggestions":"46"},{"ruleId":"42","severity":1,"message":"43","line":30,"column":25,"nodeType":"44","messageId":"45","endLine":30,"endColumn":28,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":32,"nodeType":"50","messageId":"51","endLine":3,"endColumn":37},{"ruleId":"48","severity":1,"message":"49","line":9,"column":28,"nodeType":"50","messageId":"51","endLine":9,"endColumn":46},{"ruleId":"42","severity":1,"message":"43","line":32,"column":54,"nodeType":"44","messageId":"45","endLine":32,"endColumn":57,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":7,"column":16,"nodeType":"50","messageId":"51","endLine":7,"endColumn":44},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["53","54"],["55","56"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["57","58"],{"messageId":"59","fix":"60","desc":"61"},{"messageId":"62","fix":"63","desc":"64"},{"messageId":"59","fix":"65","desc":"61"},{"messageId":"62","fix":"66","desc":"64"},{"messageId":"59","fix":"67","desc":"61"},{"messageId":"62","fix":"68","desc":"64"},"suggestUnknown",{"range":"69","text":"70"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"69","text":"71"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"72","text":"70"},{"range":"72","text":"71"},{"range":"73","text":"70"},{"range":"73","text":"71"},[458,461],"unknown","never",[714,717],[873,876]]