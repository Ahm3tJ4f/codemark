[{"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\index.tsx":"1","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\code-editor\\code-editor.tsx":"2","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\preview\\preview.tsx":"3","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"4","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\plugins\\fetch-plugin.ts":"5","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\index.ts":"6","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\code-cell\\code-cell.tsx":"7","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\resizable\\resizable.tsx":"8"},{"size":322,"mtime":1675666439312,"results":"9","hashOfConfig":"10"},{"size":1713,"mtime":1675714925252,"results":"11","hashOfConfig":"10"},{"size":1482,"mtime":1675713543431,"results":"12","hashOfConfig":"10"},{"size":930,"mtime":1668362290819,"results":"13","hashOfConfig":"10"},{"size":2048,"mtime":1675247496982,"results":"14","hashOfConfig":"10"},{"size":1004,"mtime":1675715250875,"results":"15","hashOfConfig":"10"},{"size":2335,"mtime":1675715760089,"results":"16","hashOfConfig":"10"},{"size":1832,"mtime":1675713473018,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"za49jg",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\index.tsx",[],[],"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\code-editor\\code-editor.tsx",["37"],"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\preview\\preview.tsx",["38"],"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\plugins\\unpkg-path-plugin.ts",["39"],"import * as esbuild from \"esbuild-wasm\";\r\n\r\nexport const unpkgPathPlugin = () => {\r\n  return {\r\n    name: \"unpkg-path-plugin\",\r\n    setup(build: esbuild.PluginBuild) {\r\n      //handle root entry file of 'index.js'\r\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          path: \"index.js\",\r\n          namespace: \"a\",\r\n        };\r\n      });\r\n      // handle relative paths in modules\r\n      build.onResolve({ filter: /^\\.+\\// }, (args) => {\r\n        const newURL = new URL(\r\n          args.path,\r\n          \"https://unpkg.com\" + args.resolveDir + \"/\"\r\n        );\r\n        return {\r\n          namespace: \"a\",\r\n          path: newURL.href,\r\n        };\r\n      });\r\n      // handle requested file in module\r\n      build.onResolve({ filter: /.*/ }, async (args) => {\r\n        return {\r\n          namespace: \"a\",\r\n          path: `https://unpkg.com/${args.path}`,\r\n        };\r\n      });\r\n    },\r\n  };\r\n};\r\n","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\plugins\\fetch-plugin.ts",["40","41"],"import * as esbuild from \"esbuild-wasm\";\r\nimport localForage from \"localforage\";\r\nimport axios from \"axios\";\r\n\r\nconst fileCache = localForage.createInstance({\r\n  name: \"filecache\",\r\n});\r\n\r\nexport const fetchPlugin = (input: string) => {\r\n  return {\r\n    name: \"fetch-plugin\",\r\n    setup(build: esbuild.PluginBuild) {\r\n      //handle root entry file of 'index.js'\r\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          loader: \"jsx\",\r\n          contents: input,\r\n        };\r\n      });\r\n\r\n      //load cached file\r\n      build.onLoad({ filter: /.*/ }, async (args) => {\r\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\r\n          args.path\r\n        );\r\n        if (cachedResult) {\r\n          return cachedResult;\r\n        }\r\n      });\r\n\r\n      //handle CSS file\r\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        fileCache.setItem(args.path, data);\r\n        const escapedData = data\r\n          .replace(/\\n/g, \"\")\r\n          .replace(/\"/g, '\\\\\"')\r\n          .replace(/'/g, \"\\\\'\");\r\n\r\n        const contents = `\r\n          const style = document.createElement('style');\r\n          style.innerText = '${escapedData}';\r\n          document.head.appendChild(style);\r\n          `;\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: \"jsx\",\r\n          contents,\r\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\r\n        };\r\n        fileCache.setItem(args.path, result);\r\n        return result;\r\n      });\r\n\r\n      //handle JS file\r\n      build.onLoad({ filter: /.*/ }, async (args) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        fileCache.setItem(args.path, data);\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: \"jsx\",\r\n          contents: data,\r\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\r\n        };\r\n        fileCache.setItem(args.path, result);\r\n        return result;\r\n      });\r\n    },\r\n  };\r\n};\r\n","C:\\Users\\Ahmett\\Desktop\\codemark\\src\\bundler\\index.ts",["42"],"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\code-cell\\code-cell.tsx",[],"C:\\Users\\Ahmett\\Desktop\\codemark\\src\\components\\resizable\\resizable.tsx",["43"],{"ruleId":"44","severity":1,"message":"45","line":13,"column":28,"nodeType":"46","messageId":"47","endLine":13,"endColumn":31,"suggestions":"48"},{"ruleId":"44","severity":1,"message":"45","line":41,"column":25,"nodeType":"46","messageId":"47","endLine":41,"endColumn":28,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":3,"column":32,"nodeType":"52","messageId":"53","endLine":3,"endColumn":37},{"ruleId":"50","severity":1,"message":"51","line":9,"column":28,"nodeType":"52","messageId":"53","endLine":9,"endColumn":46},{"ruleId":"44","severity":1,"message":"45","line":32,"column":54,"nodeType":"46","messageId":"47","endLine":32,"endColumn":57,"suggestions":"54"},{"ruleId":"50","severity":1,"message":"51","line":7,"column":16,"nodeType":"52","messageId":"53","endLine":7,"endColumn":44},{"ruleId":"44","severity":1,"message":"45","line":16,"column":16,"nodeType":"46","messageId":"47","endLine":16,"endColumn":19,"suggestions":"55"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["56","57"],["58","59"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",["60","61"],["62","63"],{"messageId":"64","fix":"65","desc":"66"},{"messageId":"67","fix":"68","desc":"69"},{"messageId":"64","fix":"70","desc":"66"},{"messageId":"67","fix":"71","desc":"69"},{"messageId":"64","fix":"72","desc":"66"},{"messageId":"67","fix":"73","desc":"69"},{"messageId":"64","fix":"74","desc":"66"},{"messageId":"67","fix":"75","desc":"69"},"suggestUnknown",{"range":"76","text":"77"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"76","text":"78"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"79","text":"77"},{"range":"79","text":"78"},{"range":"80","text":"77"},{"range":"80","text":"78"},{"range":"81","text":"77"},{"range":"81","text":"78"},[458,461],"unknown","never",[1007,1010],[873,876],[642,645]]